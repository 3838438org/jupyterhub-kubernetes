---
#Â This role performs tasks common to all hosts in a Kubernetes cluster

- name: Remove hostname <-> 127.0.0.1 mapping from /etc/hosts
  lineinfile: >
    dest=/etc/hosts
    regexp="127\.0\.0\.1.*{{ inventory_hostname }}"
    state=absent

- name: Add cluster IPs on correct interface to /etc/hosts
  blockinfile:
    dest: /etc/hosts
    block: |
      {{ hostvars[item]['ansible_' + cluster_interface]['ipv4']['address'] }} {{ item }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item }}"
    insertbefore: BOF
  with_items: "{{ groups['kube_hosts'] }}"

- name: Install Kubernetes repo
  copy:
    dest: /etc/yum.repos.d/kubernetes.repo
    content: |
      [kubernetes]
      name=Kubernetes
      baseurl=http://yum.kubernetes.io/repos/kubernetes-el7-x86_64
      enabled=1
      gpgcheck=1
      repo_gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
             https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

- name: Install Docker and Kubernetes
  yum: name={{ item }} state=latest
  with_items:
    - jq
    - docker
    - kubelet
    - kubeadm
    - kubectl
    - kubernetes-cni

- name: Enable docker and kubelet services
  service: name={{ item }} state=started enabled=yes
  with_items:
    - docker
    - kubelet

- name: Initialise Kubernetes control plane components
  command: kubeadm init --token={{ kubeadm_token }} --api-advertise-addresses={{ kube_master_ip }}
  register: kubeadm_init
  failed_when: "kubeadm_init.rc != 0 and '[open /etc/kubernetes/kubelet.conf: file exists]' not in kubeadm_init.stderr"
  when: kube_role == 'master'

- name: Correct the API advertise address
  lineinfile:
    dest: /etc/kubernetes/manifests/kube-apiserver.json
    regexp: "--advertise-address"
    line: "          \"--advertise-address={{ kube_master_ip }}\","
    insertafter: "--allow-privileged"
  when: kube_role == 'master'

- name: Update proxy-mode for proxy pods
  shell: "kubectl -n kube-system get ds -l 'component=kube-proxy-amd64' -o json | jq '.items[0].spec.template.spec.containers[0].command |= .+ [\"--proxy-mode=userspace\"]' | kubectl apply -f - && kubectl -n kube-system delete pods -l 'component=kube-proxy-amd64'"
  when: kube_role == 'master'

- name: Join Kubernetes cluster
  command: kubeadm join --token={{ kubeadm_token }} {{ kube_master_ip }}
  when: kube_role == 'node'

- name: Install pod network
  command: kubectl apply -f https://git.io/weave-kube
  when: kube_role == 'master'
