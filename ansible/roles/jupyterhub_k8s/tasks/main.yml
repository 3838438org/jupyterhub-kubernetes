---
# Setup tasks for JupyterHub on Kubernetes

- name: Install pip for system Python
  yum: name=python-pip state=latest

- name: Install docker-py
  pip: name=docker-py state=latest

- name: Pre-pull Docker images onto nodes
  docker_image: name={{ item }}
  with_items:
    - "{{ jupyterhub_image }}"
    - "{{ singleuser_image }}"
  when: kube_role == 'node'

- name: Create certs directory
  file: path=/root/certs state=directory
  when: kube_role == 'master'

- name: Generate self-signed SSL certificate on master
  command: >
    openssl req -new -nodes -x509 -subj "{{ ssl_cert_subject }}" -days 3650
    -keyout /root/certs/cert.key -out /root/certs/cert.pem -extensions v3_ca
  args:
    creates: /root/certs/cert.pem
  when: kube_role == 'master' and use_self_signed_ssl_cert

- name: Retrieve self-signed SSL certificate from master
  slurp: src=/root/certs/cert.pem
  register: self_signed_cert
  when: kube_role == 'master' and use_self_signed_ssl_cert

- name: Retrieve self-signed SSL private key from master
  slurp: src=/root/certs/cert.key
  register: self_signed_key
  when: kube_role == 'master' and use_self_signed_ssl_cert

- name: Set SSL facts from self-signed cert
  set_fact:
    ssl_certificate: "{{ self_signed_cert.content|b64decode }}"
    ssl_private_key: "{{ self_signed_key.content|b64decode }}"
  when: kube_role == 'master' and use_self_signed_ssl_cert

- name: Create manifests directory
  file: path=/root/manifests state=directory
  when: kube_role == 'master'

- name: Copy manifest files
  template: src={{ item }} dest=/root/manifests/ mode="u=rw,g=,o="
  with_fileglob:
    - "{{ playbook_dir }}/../jupyterhub_k8s/*.yml"
  when: kube_role == 'master'
