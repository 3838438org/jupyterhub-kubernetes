apiVersion: v1
kind: Secret
metadata:
  name: nginx-ssl-cert
  labels:
    app: jupyterhub
    jupyterhub: nginx-proxy
type: Opaque
data:
  pem: |-
    {{ ssl_certificate|b64encode }}
  key: |-
    {{ ssl_private_key|b64encode }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  labels:
    app: jupyterhub
    jupyterhub: nginx-proxy
data:
  nginx.conf: |-
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
      worker_connections  1024;
    }


    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /var/log/nginx/access.log  main;

      sendfile        on;
      #tcp_nopush     on;

      keepalive_timeout  65;

      #gzip  on;

      # Prevent nginx sending the version number
      server_tokens off;

      # Don't allow the browser to render the page inside an frame or iframe
      # to avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
      add_header X-Frame-Options DENY;

      # Deny access to unknown hosts
      server {
        server_name  _;
        return 400 "Unknown host.";
      }

      # If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
      # Connection header that may have been passed to this server
      map $http_upgrade $proxy_connection {
        default upgrade;
        '' close;
      }

      #Â Redirect http to https
      server {
        server_name {{ server_name }};
        listen 80;
        return 301 https://$host{% if https_port %}:{{ https_port }}{% endif %}$request_uri;
      }

      # Proxy settings
      server {
        server_name {{ server_name }};

        # SSL configuration from Mozilla SSL config generator
        # https://mozilla.github.io/server-side-tls/ssl-config-generator/
        # Generated 08/01/2016
        listen 443 ssl;
        ssl_certificate     /etc/nginx/certs/cert.pem;
        ssl_certificate_key /etc/nginx/certs/cert.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        # Enables server-side protection from BEAST attacks
        # http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
        ssl_prefer_server_ciphers on;
        # Disable SSLv3 since it's less secure then TLS http://en.wikipedia.org/wiki/Secure_Sockets_Layer#SSL_3.0
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        # Enable HSTS (HTTP Strict Transport Security) to avoid ssl stripping
        # https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
        # https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
        # 15768000 seconds = 6 months
        add_header Strict-Transport-Security max-age=15768000;

        location / {
          proxy_http_version 1.1;
          proxy_buffering off;
          proxy_set_header Host $http_host;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $proxy_connection;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          # Mitigate httpoxy attack
          proxy_set_header Proxy "";
          proxy_pass http://jupyterhub:8000;
        }
      }
    }
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx-proxy
  labels:
    app: jupyterhub
    jupyterhub: nginx-proxy
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: jupyterhub
        jupyterhub: nginx-proxy
    spec:
      containers:
        - name: nginx
          image: nginx
          command:
            - nginx
            - -g
            - "daemon off;"
            - -c
            - /etc/nginx/conf/nginx.conf
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          volumeMounts:
            - name: conf-volume
              mountPath: /etc/nginx/conf
            - name: certs-volume
              mountPath: /etc/nginx/certs
              readOnly: true
      volumes:
        - name: conf-volume
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: certs-volume
          secret:
            secretName: nginx-ssl-cert
            items:
              - key: pem
                path: cert.pem
              - key: key
                path: cert.key
