---

- name: Check if storage device has been partitioned
  stat: path={{ storage_partition }}
  register: stat

- name: Make primary partition on storage device
  shell: parted -s -a opt {{ storage_device }} mklabel gpt -- mkpart primary ext4 1 -1
  when: not stat.stat.exists

- name: Create filesystem on primary partition
  filesystem:
    dev: "{{ storage_partition }}"
    fstype: ext4
    resizefs: yes

- name: Mount storage device
  mount:
    name: /export
    src: "{{ storage_partition }}"
    state: mounted
    fstype: ext4

- name: Install NFS server
  apt: update_cache=yes name=nfs-kernel-server state=latest
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Ensure NFS server is started
  service: name=nfs-kernel-server state=started enabled=yes

- name: Install git and golang
  apt: update_cache=yes name=git,golang state=latest
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Fetch github.com/kubernetes-incubator/external-storage repo
  git:
    repo: https://github.com/kubernetes-incubator/external-storage.git
    dest: /root/go-workspace/src/github.com/kubernetes-incubator/external-storage

- name: Build nfs-provisioner
  shell: make build
  args:
    chdir: /root/go-workspace/src/github.com/kubernetes-incubator/external-storage/nfs
  environment:
    GOPATH: /root/go-workspace

- name: Make kube config directory
  file: path=/root/.kube state=directory

- name: Upload Kubernetes config
  copy:
    src: "{{ playbook_dir }}/.artifacts/{{ artifact_namespace }}/kubernetes-admin.conf"
    dest: /root/.kube/config

- name: Install nfs-provisioner wrapper script
  copy:
    content: |
      #! /usr/bin/env bash

      while true; do
        curl -o /dev/null -s -I -f -k https://{{ groups['kube_masters'][0] }}:6443
        status=$?
        #Â The curl return code for "failed to connect" is 7
        # Once we get a return code that is NOT 7, assume the server is up
        [ $status -ne 7 ] && break
        echo "Waiting for Kubernetes master to become available..."
        sleep 5
      done

      exec /root/go-workspace/bin/nfs-provisioner \
        -provisioner=kubernetes-incubator/nfs \
        -kubeconfig=/root/.kube/config \
        -run-server=false \
        -use-ganesha=false
    dest: /usr/local/bin/nfs-provisioner
    mode: "u=rwx,g=rx,o=rx"

- name: Install systemd unit for NFS provisioner
  copy:
    content: |
      [Unit]
      Description=Kubernetes NFS provisioner

      [Service]
      ExecStart=/usr/local/bin/nfs-provisioner
      Restart=always

      [Install]
      WantedBy=multi-user.target
    dest: /lib/systemd/system/nfs-provisioner.service

- name: Ensure nfs-provisioner is restarted
  service: name=nfs-provisioner state=restarted enabled=yes
